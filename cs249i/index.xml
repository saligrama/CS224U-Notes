<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 249I, Winter 2023 on Aditya's notes</title><link>https://saligrama.io/notes/cs249i/</link><description>Recent content in CS 249I, Winter 2023 on Aditya's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://saligrama.io/notes/cs249i/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</guid><description>The Modern Internet # Revisiting BGP # External BGP: between Autonomous Systems # Internal BGP (iBGP): within an AS # Set of private ASNs (192.168.0.0/16) eBGP: any route received over eBGP: propagate to both iBGP and eBGP peers iBGP: any route received over iBGP: propogate to only eBGP peers Instead of having a full mesh to take care of this: Route Reflection Central server collects all the routes, decides which to propogate Types of routing # Hot potato: get rid of the packet ASAP (used in practice, greedy) Get it to the next AS that has the shortest path Note: shortest path often means cheapest path Cold potato: hold onto packet as long as possible IP Transit and BGP Peering # IP transit: entity pays an AS to gain access to the broader internet Exchange: $$ for bits and BGP announcment BGP Peering (Peering relationship): no $$ exchanged, just bits run (b/c both sides get something out of the deal, e.</description></item></channel></rss>