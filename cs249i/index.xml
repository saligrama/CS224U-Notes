<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 249I, Winter 2023 on Aditya's notes</title><link>https://saligrama.io/notes/cs249i/</link><description>Recent content in CS 249I, Winter 2023 on Aditya's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://saligrama.io/notes/cs249i/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</guid><description>Intro: internet players # External BGP: between Autonomous Systems # Internal BGP (iBGP): within an AS # Set of private ASNs (192.168.0.0/16) eBGP: any route received over eBGP: propagate to both iBGP and eBGP peers iBGP: any route received over iBGP: propogate to only eBGP peers Instead of having a full mesh to take care of this: Route Reflection Central server collects all the routes, decides which to propogate Types of routing # Hot potato: get rid of the packet ASAP (used in practice, greedy) Get it to the next AS that has the shortest path Note: shortest path often means cheapest path Cold potato: hold onto packet as long as possible IP Transit and Peering # IP transit: entity pays an AS to gain access to the broader internet Exchange: $$ for bits and BGP announcment Peering: no $$ exchanged, just bits run (b/c both sides get something out of the deal, e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-18-modern-routing-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-18-modern-routing-practices/</guid><description>Modern Routing Practices # A note about private IPs: we can actually ping a private IP from a public IP, as long as there is a route to it The only thing special about private IPs is that ISPs will not allow you to advertise the prefix onto the internet How a router works # Context: each router is connected to some finite number of other routers RIB: Routing Information Base Inputs: Static routes (configured in text files) iBGP eBGP OSPF Output to Control Plane (software, in memory) Routes are organized by prefix e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-23-last-mile-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-23-last-mile-access/</guid><description>Last-Mile Internet Access # Def.: The final leg between the telecommunications network (cable, Internet, etc) and the end user (home, university, cellphone, etc)
Tends to be the most bandwidth-constrained, as it costs lots of money to invest in infrastructure to everywhere History of last-mile # Early 90s: 56k dialup was the way to connect Leveraged existing telephone network to connect homes to the internet However: very slow, and restricted by modems themselves - 56kbps was theoretical maximum, in reality was ~30-40kbps Also: Could not use phone and internet at the same time Late 90s: Digital Subscriber Line (DSL) Different frequency channel (so different hardware) - allows people to use phone and internet at the same time Early on, up to 256k speeds Much of the world still uses DSL Early 00s: cable internet Core idea: use cable television network for internet; typically copper cables or copper/fiber hybrid 80% of Americans use cable to connect to &amp;ldquo;broadband&amp;rdquo; (defined by FCC as stable, 25mbps DL, 3mbps UL, but term has been diluted by cable companies) Even still, 21M Americans don&amp;rsquo;t have broadband access; 1/2 of global population does not either Caused cable TV companies to become ISPs 2010s: Fiber-to-the-Premises Available in densely populated areas in developed regions Major US, European players, e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-25-host-and-network-addressing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-25-host-and-network-addressing/</guid><description>Host and Network Addressing # A brief refresher on IPv4 # IPv4: 32-bit addresses a.b.c.d where each quartet is 8 bits Hard to refer to an IP space as individual IPs, so come up with CIDR: Class Interdomain Routing e.g. a.0.0.0/8: contains a. with any suffix Minimum size for routing on the public internet is a /24 Address space limited by 32 bits; already ran out of IPv4 addresses To get address: client queries DHCP server, which has a pool of addresses to give out, and returns a DHCP lease on an IP address Later: ask for a DHCP renewal to keep using the IP address (without renewal, timeout and IP goes back in the pool) IPv6 # 128-bit addresses for a larger possible address space But also: cleaned up a bunch of other legacy artifacts from IPv4; lots of unnecessary fields gone Addresses have two halves (so smallest assigned IP is a /64): Network part is always a /64, containing: Registry (/23) ISP prefix (/32) Site prefix (/48), smallest prefix allowed to be advertised Subnet prefix (/64) Interface ID is a /64 IPv6 has no ARP; has DHCP, but is different: No broadcast Multicast address for all local routes Send out router discovery request (ICMP), dest: multicast for local routers Router does not send back client IP; sends back a bit saying managed IP address space or unmanaged Unmanaged IP case: responsible for finding own IP address Pick random value (neighbor discovery request) - used in practice, as it&amp;rsquo;s easier than the other following option Or: MAC addresses are supposedly unique, so use &amp;lt;24 bits of MAC&amp;gt;::fffe:&amp;lt;24 bits of MAC&amp;gt; = 64 bits However, this allows tracking of a device across networks!</description></item></channel></rss>