<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 249I, Winter 2023 on Aditya's notes</title><link>https://saligrama.io/notes/cs249i/</link><description>Recent content in CS 249I, Winter 2023 on Aditya's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://saligrama.io/notes/cs249i/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-09-internet-players/</guid><description>Intro: internet players # External BGP: between Autonomous Systems # Internal BGP (iBGP): within an AS # Set of private ASNs (192.168.0.0/16) eBGP: any route received over eBGP: propagate to both iBGP and eBGP peers iBGP: any route received over iBGP: propogate to only eBGP peers Instead of having a full mesh to take care of this: Route Reflection Central server collects all the routes, decides which to propogate Types of routing # Hot potato: get rid of the packet ASAP (used in practice, greedy) Get it to the next AS that has the shortest path Note: shortest path often means cheapest path Cold potato: hold onto packet as long as possible IP Transit and Peering # IP transit: entity pays an AS to gain access to the broader internet Exchange: $$ for bits and BGP announcment Peering: no $$ exchanged, just bits run (b/c both sides get something out of the deal, e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-18-modern-routing-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-18-modern-routing-practices/</guid><description>Modern Routing Practices # A note about private IPs: we can actually ping a private IP from a public IP, as long as there is a route to it The only thing special about private IPs is that ISPs will not allow you to advertise the prefix onto the internet How a router works # Context: each router is connected to some finite number of other routers RIB: Routing Information Base Inputs: Static routes (configured in text files) iBGP eBGP OSPF Output to Control Plane (software, in memory) Routes are organized by prefix e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-23-last-mile-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-23-last-mile-access/</guid><description>Last-Mile Internet Access # Def.: The final leg between the telecommunications network (cable, Internet, etc) and the end user (home, university, cellphone, etc)
Tends to be the most bandwidth-constrained, as it costs lots of money to invest in infrastructure to everywhere History of last-mile # Early 90s: 56k dialup was the way to connect Leveraged existing telephone network to connect homes to the internet However: very slow, and restricted by modems themselves - 56kbps was theoretical maximum, in reality was ~30-40kbps Also: Could not use phone and internet at the same time Late 90s: Digital Subscriber Line (DSL) Different frequency channel (so different hardware) - allows people to use phone and internet at the same time Early on, up to 256k speeds Much of the world still uses DSL Early 00s: cable internet Core idea: use cable television network for internet; typically copper cables or copper/fiber hybrid 80% of Americans use cable to connect to &amp;ldquo;broadband&amp;rdquo; (defined by FCC as stable, 25mbps DL, 3mbps UL, but term has been diluted by cable companies) Even still, 21M Americans don&amp;rsquo;t have broadband access; 1/2 of global population does not either Caused cable TV companies to become ISPs 2010s: Fiber-to-the-Premises Available in densely populated areas in developed regions Major US, European players, e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-25-host-and-network-addressing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-25-host-and-network-addressing/</guid><description>Host and Network Addressing # A brief refresher on IPv4 # IPv4: 32-bit addresses a.b.c.d where each quartet is 8 bits Hard to refer to an IP space as individual IPs, so come up with CIDR: Class Interdomain Routing e.g. a.0.0.0/8: contains a. with any suffix Minimum size for routing on the public internet is a /24 Address space limited by 32 bits; already ran out of IPv4 addresses To get address: client queries DHCP server, which has a pool of addresses to give out, and returns a DHCP lease on an IP address Later: ask for a DHCP renewal to keep using the IP address (without renewal, timeout and IP goes back in the pool) IPv6 # 128-bit addresses for a larger possible address space But also: cleaned up a bunch of other legacy artifacts from IPv4; lots of unnecessary fields gone Addresses have two halves (so smallest assigned IP is a /64): Network part is always a /64, containing: Registry (/23) ISP prefix (/32) Site prefix (/48), smallest prefix allowed to be advertised Subnet prefix (/64) Interface ID is a /64 IPv6 has no ARP; has DHCP, but is different: No broadcast Multicast address for all local routes Send out router discovery request (ICMP), dest: multicast for local routers Router does not send back client IP; sends back a bit saying managed IP address space or unmanaged Unmanaged IP case: responsible for finding own IP address Pick random value (neighbor discovery request) - used in practice, as it&amp;rsquo;s easier than the other following option Or: MAC addresses are supposedly unique, so use &amp;lt;24 bits of MAC&amp;gt;::fffe:&amp;lt;24 bits of MAC&amp;gt; = 64 bits However, this allows tracking of a device across networks!</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-01-30-domain-name-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-01-30-domain-name-system/</guid><description>Domain Name System (DNS) # An aside: &amp;ldquo;Hourglass Model of the Internet&amp;rdquo;
Email/general Application layer DNS/TLS TCP/UDP - up till here, the internet we interact with IP/BGP (narrowest part, i.e., everything needs to go through here) Link layer, Ethernet, Cellular If a layer&amp;rsquo;s security is compromised, everything above it could be compromised.
Motivation for DNS # Communication on the internet is via IP, but it&amp;rsquo;s hard to remember IP addresses!</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-06-internet-governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-06-internet-governance/</guid><description>Internet Governance # Motivation: little central coordination between ISPs; everyone makes their own commercial decisions But: other aspects need centralized organization, e.g. DNS and name registration IP and MAC address allocation WHOIS Port numbers Protocol identifiers Internet Assigned Numbers Authority (IANA) # Originally: Jon Postel as &amp;ldquo;czar&amp;rdquo; of port numbers (RFC 322) Postel&amp;rsquo;s efforts eventually became Internet Assigned Numbers Authority (IANA) Became official in ~1988, when DARPA provided funding to USC to maintain functions In 1988, IANA control transferred to ICANN (see DNS notes) ICANN contracts out IANA&amp;rsquo;s operations to Public Technical Identifiers (PTI) to maintain infrastructure More on ICANN # Domain&amp;rsquo;s and gTLDs # Originally 7 gTLDs (com, org, net, int, edu, gov, mil) net originally used for internet infra operators arpa used for reverse DNS pointer lookups Generic restricted: biz, name, pro for specific purposes Sponsored: aero, asia, jobs, travel for specific industries In 2011, ICANN began selling gTLDs for $185,000 Verisign and .</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-08-modern-web-protocols/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-08-modern-web-protocols/</guid><description>The Modern Web # A brief evolution of the web # Earliest websites provided static content with little additional media Over time - websites grew to include many more resources, e.g. More pages Static assets: images, logos Dynamic content (JS, AJAX) Modern websites are incredibly complex; rely on often hundreds of resources to properly function HTTP/0.9 (1991) # Request: single line command, only supported retrieving HTML content GET /index.html Response: file data itself Built on top of TCP, for reliable transport of data; connection closed after every request HTTP/1.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-13-tls-and-webpki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-13-tls-and-webpki/</guid><description> TLS and WebPKI # Loading a site:
Client loads cnn.com over HTTPS, sends client hello Server has a certificate chain used for server hello e.g. TBS (to-be-signed) certificate Subject: cn = cnn.com Public Key Expiration Extension Issuer: cn = Let&amp;rsquo;s Encrypt Signature Client has root cert store containing a number of CA&amp;rsquo;s, e.g. Chrome root store Root: Let&amp;rsquo;s Encrypt Multiple intermediate certs Huge number of leaves signed by intermediate cert</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-13-web-content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-13-web-content/</guid><description>Web Content # Modern websites rely on many different types of third-party resources to provide services to keep websites functional Served by external parties, e.g. on cnn.com could have third-party resources from doubleclick.com or google-analytics.com Could be anything from static images to JS libraries to analytics to etc Web tracking and analytics # Many websites rely on user analytics to improve services e.g. Google Analytics: appears on 70% of top websites Can see where users are connecting from, how long spent on page, devices used, etc.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-22-internet-crime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-22-internet-crime/</guid><description>Internet crime # Motives, means, opportunities # Motives Money e.g. selling data dumps Espionage e.g. Russia FSB hacking Yahoo to spy on domestic and foreign targets Stalkerware e.g. Life360, Airtags Politics/activism e.g. Sony hack (North Korea) Clout/reputation/trolling e.g. Roblox &amp;ldquo;street cred&amp;rdquo;, Lapsus$ Means Social engineering e.g. SIM swap Phishing e.g. DNC attack Watering hole attacks e.g. Operation Aurora Supply chain attacks e.g. NPM, MSP attacks like SolarWinds USB drives Card skimming MITM attacks DNS/BGP hijacking Insider threat e.</description></item><item><title/><link>https://saligrama.io/notes/cs249i/2023-02-27-middleboxes-and-nat-and-https-interception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs249i/2023-02-27-middleboxes-and-nat-and-https-interception/</guid><description>Middleboxes, NAT, and the End of End-to-End # End-to-End principle # Application-specific features should only reside in the communicating end-nodes of the network Intermediary nodes, such as gateways and routers, should not meddle with application-layer components i.e. Application-layer: process-to-process; Transport-layer: host-to-host; internet and link layer below Middleboxes # Def.: a network device that transforms, inspects, and manipulates traffic for purposes other than packet forwarding incl. firewalls, network access translators (NATs), load balancers, and deep packet inspection Extremely prevalent: 2012 SIGCOMM study had average organization&amp;rsquo;s middlebox-to-router ratio around 70% Can be good: can be used for monitoring and logging intrusions, dropping malicious packets, balancing web load, etc.</description></item></channel></rss>