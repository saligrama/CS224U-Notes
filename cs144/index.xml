<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 144, Spring 2023 on Aditya's notes</title><link>https://saligrama.io/notes/cs144/</link><description>Recent content in CS 144, Spring 2023 on Aditya's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://saligrama.io/notes/cs144/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://saligrama.io/notes/cs144/2023-04-05-datagrams-encapsulation-and-multiplexing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs144/2023-04-05-datagrams-encapsulation-and-multiplexing/</guid><description>Datagrams, Encapsulation, and Multiplexing # Key terminology: service interface/abstraction &amp;ndash; the contract that a computer system is expected to fulfill
Entities of a network:
Hosts (endpoints) Routers Switches Datagram # Fundamental unit of a network: a datagram (&amp;ldquo;postcard&amp;rdquo;) with fields
To: some entity (a name with meaning in some context) Payload such that the network has a contractual agreement to make a &amp;ldquo;best effort&amp;rdquo; at delivering the datagram to the entity.</description></item><item><title/><link>https://saligrama.io/notes/cs144/2023-04-07-internet-operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs144/2023-04-07-internet-operation/</guid><description>How the internet works # Base level: protocol stack, e.g.
(application)---datagram socket---&amp;gt;(user datagram protocol impl)---payload---&amp;gt;(internet datagram protocol impl) ---&amp;gt;(IP)---&amp;gt;(UDP)---datagram socket---&amp;gt;(application server) Note not all of these are visible, because of encapsulation!
What users and applications want # Reliable retrieval of a short piece of data
e.g. IP address lookup for saligrama.io Reliable action
Text of 7th message is &amp;ldquo;Fire a torpedo&amp;rdquo; Reliable byte stream
Sequence of bytes in each direction delivered in order, correctly Reliable delivery of a large file (FTP, SMTP, HTTP)</description></item><item><title/><link>https://saligrama.io/notes/cs144/2023-04-12-transmission-control-protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saligrama.io/notes/cs144/2023-04-12-transmission-control-protocol/</guid><description> Transmission Control Protocol # Goal: turn byte-stream push, pop, peek interfaces into idempotent operations
TCP sender message (aka lab checkpoint 1):
first_index: 0 data: &amp;#34;abcd&amp;#34; FIN: false or true</description></item></channel></rss>